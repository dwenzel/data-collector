<?php

namespace DWenzel\DataCollector\Command;

use DWenzel\DataCollector\Configuration\Argument\NameArgument;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\Input;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/***************************************************************
 *  Copyright notice
 *
 *  (c) 2019 Dirk Wenzel <wenzel@cps-it.de>
 *  All rights reserved
 *
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html.
 * A copy is found in the text file GPL.txt and important notices to the license
 * from the author is found in LICENSE.txt distributed with these scripts.
 * This script is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/
class RegisterInstanceCommand extends Command
{

    const COMMAND_DESCRIPTION = 'Registers an instance from which data should be collected';
    const COMMAND_HELP = 'Provide instance name, role etc.';

    protected static $defaultName = 'app:register-instance';

    const ARGUMENTS = [
        NameArgument::class,
    ];

    /**
     * @inheritDoc
     */
    protected function configure()
    {
        $this->setDescription(static::COMMAND_DESCRIPTION)
            ->setHelp(static::COMMAND_HELP)
            ->addArgument(
                'name',
                InputArgument::REQUIRED,
                'Name of the instance.Will be used for display'
                );
    }

    /**
     * @param InputInterface $input
     * @param OutputInterface $output
     * @return int|void|null
     */
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        parent::execute($input, $output); // TODO: Change the autogenerated stub
    }
}
